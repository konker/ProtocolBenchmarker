package fi.hiit.cultar.protocolbenchmarker;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteException;

import fi.hiit.android.data.DbHelper;


/**
  Convenience class for storing data records generated by Benchmark objects.
  Could possibly make it more generalised to accept various different backing 
  store implementations, but for now just uses sqlite directly.
 */
//[TODO: implement java.io.Closeable]
public class DataStore {
    private DbHelper mDbHelper;
    private SQLiteDatabase mDb;


    public DataStore(Context context, String databasePath, int dbXmlResource) throws DataStoreException {
        try {
            mDbHelper = new DbHelper(context, databasePath, dbXmlResource);
            mDb = mDbHelper.getWritableDatabase();
        }
        catch (Exception ex1) {
            ex1.printStackTrace();
            throw new DataStoreException("Could not open DbHelper", ex1);
        }
    }

    public void close() {
        mDb.close();
        mDbHelper.close();
    }

    public void write(String networkInfo, String locationInfo, String data1) throws DataStoreException {
        writeExec(networkInfo, locationInfo, data1, null, null, null);
    }

    public void write(String networkInfo, String locationInfo, String data1, String data2) throws DataStoreException {
        writeExec(networkInfo, locationInfo, data1, data2, null, null);
    }

    public void writeExec(String networkInfo, String locationInfo, String data1, String data2, String data3, String data4) throws DataStoreException {
        // Insert a record into the database
        // Automatically add a timestamp (and other metadata?)
        String[] args = {
            networkInfo,
            locationInfo,
            data1,
            data2,
            data3,
            data4
        };
        mDb.execSQL(mDbHelper.getQuery("insert"), args);
    }
}

